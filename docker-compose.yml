version: '3.7'

services:
    # サービス名は自由に設定
    django:
        # ディレクトリの中から`Dockerfile`を探す
        build: .
        # ↓起動順番を調整（本来はentrypoint.shで処理すべき）20191218
        depends_on:
            - postgres
        # サービス起動後に入力されるコマンドを設定
        command: python app/manage.py runserver 0.0.0.0:8000
        # データを永続化させる場合の設定。`host:container`でパスを記載
        volumes:
            - ./:/usr/src/
        # 開放するポートを指定。`host:container`でポートを記載  
        ports:
            - 8000:8000
        # 環境変数を指定
        # environment:
        env_file:
            - .env
        # 接続するサービスを指定
        depends_on:
            - postgres

    postgres:
        # 公式からイメージをpull
        image: postgres:12.0-alpine
        # データベースの永続化
        # ホストのディレクトリにマウントしない様、先頭に`./`をつけない
        volumes:
            # - postgres_data:/var/lib/postgresql/data
            - ./postgresql_data:/var/lib/postgresql/data
        # su権限を持つ、指定されたユーザーと同じ名前のデータベースを作成
        # valueはdjangoサービスで指定したものと同じ様に記載
        environment:
            - POSTGRES_USER=django_db_user
            - POSTGRES_PASSWORD=hello_django
            - POSTGRES_DB=django_db

    redis:
        image: redis:latest
        ports:
            - 6379:6379
        volumes:
            - ./data/redis:/data
        command: redis-server --appendonly yes

# トップレベルに書く「名前付きvolumes」は複数サービスから参照できる
volumes:
    postgresql_data: